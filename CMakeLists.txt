cmake_minimum_required(VERSION 3.25.1)

project(World3D LANGUAGES C CXX)

set(EXTERNAL_SOURCE_DIR $ENV{External})
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(BUILD_SHARED_LIBS ON)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})

set(SFML_BUILD_GRAPHICS OFF CACHE BOOL "" FORCE)
set(SFML_BUILD_AUDIO OFF CACHE BOOL "" FORCE)
set(SFML_BUILD_NETWORK OFF CACHE BOOL "" FORCE)

set(GLM_BUILD_LIBRARY OFF CACHE BOOL "" FORCE)

if(MSVC)
	string(APPEND CMAKE_RUNTIME_OUTPUT_DIRECTORY "/bin")
	string(APPEND CMAKE_LIBRARY_OUTPUT_DIRECTORY "/lib")
	string(APPEND CMAKE_ARCHIVE_OUTPUT_DIRECTORY "/lib")
else()
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
endif()

add_compile_definitions($<$<CONFIG:Debug>:DEBUG> GLM_FORCE_SSE2)

add_subdirectory(${EXTERNAL_SOURCE_DIR}/sfml/2.6.2 sfml)
add_subdirectory(${EXTERNAL_SOURCE_DIR}/glad/core glad)
add_subdirectory(${EXTERNAL_SOURCE_DIR}/glm glm)
add_subdirectory(${EXTERNAL_SOURCE_DIR}/freetype freetype)
add_subdirectory(${EXTERNAL_SOURCE_DIR}/utfcpp utfcpp)

add_subdirectory(${PROJECT_SOURCE_DIR}/src/renderer)
add_subdirectory(${PROJECT_SOURCE_DIR}/src/app)

if(MSVC)
	set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT app)
endif()